# Урок 5. Работа с файлами
#
# 1. Создать программный файл в текстовом формате, записать в него построчно данные,
#    вводимые пользователем. Об окончании ввода данных будет свидетельствовать пустая строка.

f_obj = open('task-1.txt', 'w', encoding='utf-8')

while True:
    in_str = input('Введите строку: ')
    if len(in_str) > 0:
        print(in_str, file=f_obj)
    else:
        f_obj.close()
        break


# 2. Создать текстовый файл (не программно), сохранить в нём несколько строк,
#    выполнить подсчёт строк и слов в каждой строке.

# 2. Создать текстовый файл (не программно), сохранить в нём несколько строк,
#    выполнить подсчёт строк и слов в каждой строке.

f_obj = open("task-2.txt", "r")

for string in f_obj:
    print(f'{string.strip()}\nСлов:\t\t{len(string.replace("-", "").split())}\nСимволов:\t{len(string)}')

f_obj.close()

# 3. Создать текстовый файл (не программно).
#    Построчно записать фамилии сотрудников и величину их окладов (не менее 10 строк).
#    Определить, кто из сотрудников имеет оклад менее 20 тысяч, вывести фамилии этих сотрудников.
#    Выполнить подсчёт средней величины дохода сотрудников.
#
# Пример файла:
#
# Иванов 23543.12
# Петров 13749.32

with open("task-3.txt", 'r') as f_obj:
    # Создаём список кортежей с данными типа (str, float).
    # Данные получаем сразу из файла и закрываем дескриптор
    li = list(map(lambda x: (x[0], float(x[1])), [string.split() for string in f_obj]))

print('Сотрудники, которые получают меньше 20 тыс. руб.')
list(map(print, [el[0] for el in li if el[1] < 20000]))  # И так можно? Восторг!

salary_per_user = sum(i[1] for i in li) / len(li)  # Дикий восторг!
print(f'Средняя зарплата сотрудников: {salary_per_user:.2f} руб.')

# 4. Создать (не программно) текстовый файл со следующим содержимым:
#
# One — 1
# Two — 2
# Three — 3
# Four — 4
#
# Напишите программу, открывающую файл на чтение и считывающую построчно данные.
# При этом английские числительные должны заменяться на русские.
# Новый блок строк должен записываться в новый текстовый файл.
digits = {
    'One': 'Один',
    'Two': 'Два',
    'Three': 'Три',
    'Four': 'Четыре',
}

print(digits)

with open("task-4-en.txt", "r") as f_obj:
    with open("task-4-ru.txt", "w") as f_obj_ru:
        # lex = dict(map(lambda x: [digits.get(int(x[1])), int(x[1])], [string.split(" - ") for string in f_obj]))
        for line in f_obj:
            key = line.split(" - ")[0]
            # print(digits.get(key))
            print(line.replace(key, digits.get(key)), end='', file=f_obj_ru)

# 5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделённых пробелами.
#    Программа должна подсчитывать сумму чисел в файле и выводить её на экран.
import random

li = [str(random.randrange(0, 100)) for i in range(0, 21)]

with open("task-5.txt", "w+") as f_obj:
    print(' '.join(li), file=f_obj)

    f_obj.seek(0)  # Устанавливаем указатель на начало файла
    # Первый вариант
    content = sum(list(map(int, f_obj.read().split())))
    print(f'Сумма чисел в файле равна: {content}')

    f_obj.seek(0)  # Устанавливаем указатель на начало файла
    # Второй вариант
    content = sum([int(i) for i in f_obj.read().split()])
    print(f'Сумма чисел в файле равна: {content}')

# 6 (Дополнительно). Сформировать (не программно) текстовый файл.
#   В нём каждая строка должна описывать учебный предмет и наличие лекционных,
#   практических и лабораторных занятий по предмету. Сюда должно входить и количество занятий.
#   Необязательно, чтобы для каждого предмета были все типы занятий.
# Сформировать словарь, содержащий название предмета и общее количество занятий по нему. Вывести его на экран.
#
# Примеры строк файла: Информатика: 100(л) 50(пр) 20(лаб).
# Физика: 30(л) — 10(лаб)
# Физкультура: — 30(пр) —
# Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}

# Функция, которая выбирает из строки только цифры и возвращает в виде целого числа
def get_int(a):
    a = ''.join(filter(str.isdigit, a))
    return int(a) if len(a) > 0 else 0

# Вариант решения с использованием исключений
try:
    f_obj = open("files/task-6.txt", "r")
    content = f_obj.readlines()
except IOError:
    print('Произошла ошибка ввода-вывода')
finally:
    f_obj.close()

# очищаем строки от завершающей последовательности "\n" и разделяем строку на части
lines = [i.strip().split() for i in content]

# Создаём итоговый словарь через генератор
out = {i[0].strip(':'): sum(list(map(get_int, i[1:]))) for i in lines}

try:
    f_obj = open("files/task-6-out.txt", "w")
    f_obj.write(f'{out}')
except IOError:
    print('Произошла ошибка ввода-вывода')
finally:
    f_obj.close()
